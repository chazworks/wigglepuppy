<?php
/**
 * WordPress to WigglePuppy Rebranding Execution Script
 *
 * This script executes the WordPress to WigglePuppy rebranding process by:
 * 1. Running Rector with custom rules for PHP files
 * 2. Running regex-based replacements for non-PHP files
 *
 * _This document was generated by JetBrains Junie_
 */

// Configuration
$rootDir = dirname(__DIR__);
$outputDir = $rootDir . '/docs/rebranding';
$completionFile = $outputDir . '/phase2-step1-completion.md';

// Function to execute a command and return output
function executeCommand($command) {
    echo "Executing: $command\n";
    $output = [];
    $returnVar = 0;
    exec($command, $output, $returnVar);

    if ($returnVar !== 0) {
        echo "Error executing command: $command\n";
        echo "Return code: $returnVar\n";
        echo "Output: " . implode("\n", $output) . "\n";
        exit(1);
    }

    return $output;
}

// Main execution
echo "Starting WordPress to WigglePuppy rebranding process (Phase 2, Step 1)...\n";

// Step 1: Run Rector for PHP files
echo "\n=== Running Rector for PHP files ===\n";
$rectorCommand = "vendor/bin/rector process --dry-run";
$rectorOutput = executeCommand($rectorCommand);
echo "Rector dry run completed. Review the output above for any issues.\n";

echo "Do you want to proceed with the actual Rector run? (y/n): ";
$handle = fopen("php://stdin", "r");
$line = trim(fgets($handle));
if (strtolower($line) !== 'y') {
    echo "Aborting Rector run.\n";
    exit(0);
}

$rectorCommand = "vendor/bin/rector process";
$rectorOutput = executeCommand($rectorCommand);
echo "Rector run completed successfully.\n";

// Step 2: Run regex replacements for non-PHP files
echo "\n=== Running regex replacements for non-PHP files ===\n";
$regexCommand = "php " . __DIR__ . "/rebranding-replace.php";
$regexOutput = executeCommand($regexCommand);
echo "Regex replacements completed successfully.\n";

// Create completion file
$completionContent = "# WordPress to WigglePuppy Rebranding - Phase 2, Step 1 Completion\n";
$completionContent .= "_This document was generated by JetBrains Junie_\n\n";
$completionContent .= "## Summary\n\n";
$completionContent .= "Phase 2, Step 1 of the WordPress to WigglePuppy rebranding process has been completed.\n\n";
$completionContent .= "The following tasks were performed:\n\n";
$completionContent .= "1. Custom Rector rules were implemented for PHP files:\n";
$completionContent .= "   - WordPressToWigglePuppyStringRector: Replaced 'WordPress' with 'WigglePuppy' in string literals\n";
$completionContent .= "   - WordPressToWigglePuppyCommentRector: Replaced 'WordPress' with 'WigglePuppy' in comments\n\n";
$completionContent .= "2. Regex-based replacements were performed for non-PHP files (JS, HTML, CSS, etc.)\n\n";
$completionContent .= "## Next Steps\n\n";
$completionContent .= "The next steps in the rebranding process are:\n\n";
$completionContent .= "1. Manual review of the changes to ensure accuracy\n";
$completionContent .= "2. Testing to verify that functionality is preserved\n";
$completionContent .= "3. Visual asset replacement (logos, icons, etc.)\n\n";
$completionContent .= "## Logs\n\n";
$completionContent .= "- Rector log: See Rector output\n";
$completionContent .= "- Regex replacement log: " . $outputDir . "/rebranding-replace-log.md\n";

file_put_contents($completionFile, $completionContent);

echo "\n=== WordPress to WigglePuppy rebranding process (Phase 2, Step 1) completed ===\n";
echo "Completion report: $completionFile\n";
